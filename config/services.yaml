# config/services.yaml
parameters:

services:
    # ============================================================
    # ‚öôÔ∏è CONFIGURATION PAR D√âFAUT
    # ============================================================
    _defaults:
        autowire: true # Injection automatique des d√©pendances
        autoconfigure: true # Enregistre automatiquement les tags requis
        bind:
            $projectDir: "%kernel.project_dir%"

    # ============================================================
    # üì¶ AUTO-D√âCOUVERTE DES SERVICES DU DOSSIER SRC/
    # ============================================================
    App\:
        resource: "../src/"
        exclude:
            - "../src/DependencyInjection/"
            - "../src/Entity/"
            - "../src/Migrations/"
            - "../src/Tests/"
            - "../src/Kernel.php"

    # ============================================================
    # üîê AUTHENTICATOR PERSONNALIS√â (formulaire de connexion)
    # ============================================================
    App\Security\LoginFormAuthenticator:
        arguments:
            $router: "@router"
            $passwordHasher: "@security.user_password_hasher"
            $userRepository: '@App\Repository\UserRepository'
            $entityManager: "@doctrine.orm.entity_manager"

    # ============================================================
    # üß† LISTENER : ENREGISTRE LES TENTATIVES DE CONNEXION
    # ============================================================
    App\EventListener\LoginAttemptListener:
        tags:
            # üî¥ Tentatives de connexion √©chou√©es
            - {
                  name: kernel.event_listener,
                  event: Symfony\Component\Security\Core\Event\AuthenticationFailureEvent,
                  method: onAuthenticationFailure,
              }

            # üü¢ Connexions r√©ussies
            - {
                  name: kernel.event_listener,
                  event: Symfony\Component\Security\Http\Event\InteractiveLoginEvent,
                  method: onInteractiveLogin,
              }
            - {
                  name: kernel.event_listener,
                  event: kernel.request,
                  method: checkSessionContext,
              }

    # ============================================================
    # üì¨ AUTRES SERVICES PERSONNALIS√âS (ajoute ici si besoin)
    # ============================================================
    # Exemple :
    # App\Service\MailService: ~
